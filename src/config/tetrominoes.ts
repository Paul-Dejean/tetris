import { Rotation } from "../state/types";

const tetrominoI: Record<Rotation, string[][]> = {
  0: [
    ["", "", "", ""],
    ["I", "I", "I", "I"],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "", "I", ""],
    ["", "", "I", ""],
    ["", "", "I", ""],
    ["", "", "I", ""],
  ],
  2: [
    ["", "", "", ""],
    ["", "", "", ""],
    ["I", "I", "I", "I"],
    ["", "", "", ""],
  ],
  3: [
    ["", "I", "", ""],
    ["", "I", "", ""],
    ["", "I", "", ""],
    ["", "I", "", ""],
  ],
};
const tetrominoJ: Record<Rotation, string[][]> = {
  0: [
    ["J", "", "", ""],
    ["J", "J", "J", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "J", "J", ""],
    ["", "J", "", ""],
    ["", "J", "", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "", "", ""],
    ["J", "J", "J", ""],
    ["", "", "J", ""],
    ["", "", "", ""],
  ],
  3: [
    ["", "J", "", ""],
    ["", "J", "", ""],
    ["J", "J", "", ""],
    ["", "", "", ""],
  ],
};

const tetrominoL: Record<Rotation, string[][]> = {
  0: [
    ["", "", "L", ""],
    ["L", "L", "L", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "L", "", ""],
    ["", "L", "", ""],
    ["", "L", "L", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "", "", ""],
    ["L", "L", "L", ""],
    ["L", "", "", ""],
    ["", "", "", ""],
  ],
  3: [
    ["L", "L", "", ""],
    ["", "L", "", ""],
    ["", "L", "", ""],
    ["", "", "", ""],
  ],
};

const tetrominoO: Record<Rotation, string[][]> = {
  0: [
    ["", "O", "O", ""],
    ["", "O", "O", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "O", "O", ""],
    ["", "O", "O", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "O", "O", ""],
    ["", "O", "O", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  3: [
    ["", "O", "O", ""],
    ["", "O", "O", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
};

const tetrominoS: Record<Rotation, string[][]> = {
  0: [
    ["", "S", "S", ""],
    ["S", "S", "", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "S", "", ""],
    ["", "S", "S", ""],
    ["", "", "S", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "", "", ""],
    ["", "S", "S", ""],
    ["S", "S", "", ""],
    ["", "", "", ""],
  ],
  3: [
    ["S", "", "", ""],
    ["S", "S", "", ""],
    ["", "S", "", ""],
    ["", "", "", ""],
  ],
};

const tetrominoT: Record<Rotation, string[][]> = {
  0: [
    ["", "T", "", ""],
    ["T", "T", "T", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "T", "", ""],
    ["", "T", "T", ""],
    ["", "T", "", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "", "", ""],
    ["T", "T", "T", ""],
    ["", "T", "", ""],
    ["", "", "", ""],
  ],
  3: [
    ["", "T", "", ""],
    ["T", "T", "", ""],
    ["", "T", "", ""],
    ["", "", "", ""],
  ],
};

const tetrominoZ: Record<Rotation, string[][]> = {
  0: [
    ["Z", "Z", "", ""],
    ["", "Z", "Z", ""],
    ["", "", "", ""],
    ["", "", "", ""],
  ],
  1: [
    ["", "", "Z", ""],
    ["", "Z", "Z", ""],
    ["", "Z", "", ""],
    ["", "", "", ""],
  ],
  2: [
    ["", "", "", ""],
    ["Z", "Z", "", ""],
    ["", "Z", "Z", ""],
    ["", "", "", ""],
  ],
  3: [
    ["", "Z", "", ""],
    ["Z", "Z", "", ""],
    ["Z", "", "", ""],
    ["", "", "", ""],
  ],
};

export const tetrominoes = {
  I: { shapes: tetrominoI, color: "#7EC7D1" },
  J: { shapes: tetrominoJ, color: "#4959A0" },
  L: { shapes: tetrominoL, color: "#E3B14F" },
  O: { shapes: tetrominoO, color: "#EAE762" },
  S: { shapes: tetrominoS, color: "#76BB5F" },
  T: { shapes: tetrominoT, color: "#855FA0" },
  Z: { shapes: tetrominoZ, color: "#D94F40" },
};

export type Tetromino = keyof typeof tetrominoes;
